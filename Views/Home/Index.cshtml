@{
    ViewData["Title"] = "Chat";
}

<input type="text" id="userInput" placeholder="Username" />
<input type="text" id="messageInput" placeholder="Message" />
<button onclick="sendMessage()">Send</button>

<ul id="messagesList"></ul>

<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.9/signalr.min.js"></script>
<script>
    // connects to chat hub
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/chatHub")
        .withAutomaticReconnect()
        .configureLogging(signalR.LogLevel.Debug)
        .build();

    // adding message to the page
    connection.on("ReceiveMessage", function (user, message, sentiment) {
        const li = document.createElement("li");
        li.textContent = `${user}: ${message} [${sentiment}]`;

        // marks message with colour based on its sentiment
        switch (sentiment.toLowerCase()) {
            case "positive":
                li.style.color = "green";
                break;
            case "negative":
                li.style.color = "red";
                break;
            case "neutral":
                li.style.color = "gray";
                break;
            default:
                li.style.color = "black";
        }
        
        document.getElementById("messagesList").appendChild(li);
    });
    
    // restarts connection if it by any reason closed while user is still on page
    connection.onclose(() => {
        startConnection();
    });

    function startConnection() {
        connection.start().catch(function (err) {
            return console.error(err.toString());
        });
    }
    startConnection();

    function sendMessage() {
        const user = document.getElementById("userInput").value;
        const message = document.getElementById("messageInput").value;
        connection.invoke("SendMessage", user, message).catch(function (err) {
            return console.error(err.toString());
        });
    }
</script>
